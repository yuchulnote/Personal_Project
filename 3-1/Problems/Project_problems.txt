<문제 및 해결>

1. Gpu cuda 설정(지금은 쉬운데 처음할 때는 얼마나 억까였는지...)
2. 처음에 openpose를 적용해 보았는데 도저히 쓸만한 정확도가 나오질 않음. -> MotionBERT 
3. Siamese Network에 적용하기 위해 들어가는 Dataset 개수가 동일해야함, 즉 같은 길이의 영상을 구해야하는 점 or 영상이 더 긴쪽의 앞뒤를 적절히 잘라서 프레임 수를 맞춰야 함.
4. 볼링장마다 환경, 조도, 카메라 차이 등 향후 어플로 만들든 Siamese Network에 적용을 하던 유사성 점수가 나오지 않을 가능성이 매우 큼 -> 그래서 MontionBERT의 Mesh 방법 필요. 

===================================================

<System Architecture>

1. 롤모델의 영상과 유저의 영상을 받아온다. 
(추후에 여기서 같은 사람의 여러가지 영상을 하나로 학습된 영상으로 출력하는 방법도 생각해볼만 할듯 아마 MotionBERT, Mesh들을 하나로 통합?)

2. 각 영상에 AlphaPose를 우선 적용한다.

3. 2번의 output을 가지고 MotionBERT의 Mesh방법을 적용하여 조도 환경 사람마다의 shape이 일원화된 3d pose estimation을 얻는다.

4. 3번의 output인 2개의 영상을 프레임별로 나눈다.(frame 수를 맞춰야해서 일부분은 삭제 필요)

5. 나눠진 프레임 사진을 기준으로 Siamese Network 에 적용한다.

6. Siamese Network의 출력 값의 Max, Min 값을 정규화하여 0~100 사이의 값으로 변환한다.

7. 롤모델과 비슷할수록 100점 안비슷할수록 0점으로 출력한다.

(추후)8. 두 영상을 띄워서 비교해주는 영상 출력?
